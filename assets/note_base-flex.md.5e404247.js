import{_ as e,o as l,c as i,Q as a}from"./chunks/framework.419948d5.js";const u=JSON.parse('{"title":"flex笔记","description":"远美网是一个vite与vitepress搭建的静态站点，记录着工作中有意义的事情，提供技术支持。","frontmatter":{"title":"flex笔记","editLink":true,"head":[["meta",{"name":"description","content":"远美网是一个vite与vitepress搭建的静态站点，记录着工作中有意义的事情，提供技术支持。"}],["meta",{"name":"keywords","content":"flex,flex属性,flex:1"}]]},"headers":[],"relativePath":"note/base-flex.md","filePath":"note/base-flex.md"}'),t={name:"note/base-flex.md"},r=a('<h3 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h3><p>之前都是使用传统的CSS布局方式，但随着CSS3广泛应用在移动端和主流浏览器中，抱着求学的心态学习接收前端新的知识Flex布局，在这里做下笔记进行总结。</p><hr><h3 id="flex使用" tabindex="-1">Flex使用 <a class="header-anchor" href="#flex使用" aria-label="Permalink to &quot;Flex使用&quot;">​</a></h3><p>设置Flex布局，在父框添加 display:flex即可。</p><p>Flex布局有浏览器兼容性，需要根据不同浏览器内核添加不同浏览器前缀，比如Chrome浏览器使用 -webkit- 前缀。</p><p><strong>注意：</strong> 如果用了弹性布局，子元素不需要浮动 float。</p><h3 id="父框设置flex携带属性" tabindex="-1">父框设置Flex携带属性 <a class="header-anchor" href="#父框设置flex携带属性" aria-label="Permalink to &quot;父框设置Flex携带属性&quot;">​</a></h3><p>justify-content: 子元素水平排列方式，值有以下几种：</p><ul><li>center 居中，(常用)</li><li>space-between 两端对齐(常用)</li><li>space-around 子元素拉手分布 (常用)</li><li>flex-start 居左</li><li>flex-end 居右</li></ul><p>align-items: 子元素垂直排列，值有以下几种：</p><ul><li>center 居中(常用)</li><li>flex-end 底部</li><li>flex-start 开始</li></ul><p>align-content:多行的时候，垂直排列</p><ul><li>center 居中 ...</li></ul><p>flex-direction: 排列方式，该属性值有以下几种：</p><ul><li>row 横向排列</li><li>row-reverse 横向翻过排列</li><li>column 纵向排列</li><li>column-reverse 纵向翻过排列</li></ul><p>flex-wrap: 子元素是否在一行显示，该属性值有以下几种：</p><ul><li>nowrap 不换行</li><li>wrap 换行</li></ul><p>flex-flow 全拼是 <code>&lt;flex-direction&gt;</code> 与 <code>&lt;flex-wrap&gt;</code>的缩写。</p><h3 id="子框身上属性" tabindex="-1">子框身上属性: <a class="header-anchor" href="#子框身上属性" aria-label="Permalink to &quot;子框身上属性:&quot;">​</a></h3><p>父框设置Flex布局，子框携带的属性：</p><ul><li>flex:1，1 指的是一个系数。</li><li>子元素在划分父元素宽度，先刨除固定宽度。</li><li>align-self 其实就是用来覆盖父级 align-items 垂直排列。</li><li>flex-grow: 1; 定义子元素放大比例。</li><li>order: 规定子元素顺序。排序：数值越小，越靠前，默认值0。</li></ul><h3 id="flex-1的含义" tabindex="-1">flex：1的含义 <a class="header-anchor" href="#flex-1的含义" aria-label="Permalink to &quot;flex：1的含义&quot;">​</a></h3><ul><li>flex是flex-grow，flex-shrink，flex-basis的缩写。</li><li>flex-grow：父控件空间有剩余是否放大；0表示不放大。</li><li>flex-shrink：父控件空间不足是否缩小。</li><li>flex-basis：子控件占主轴的大小，主轴就是flex的主方向，row是横向，column是竖向。</li><li>flex默认属性是0 1 auto，(父控件有剩余控件不放大，父控件空间不足按1缩小，保持本身的空间大小)。</li><li>flex:1;的值是1 1 0%，(父控件有剩余空间按1放大，父控件空间不足按1缩小，自身的空间大小是0%)。</li></ul><p>参考资料：</p><ul><li><a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="noreferrer">Flex 布局教程：语法篇</a></li></ul>',26),o=[r];function n(s,f,x,c,p,d){return l(),i("div",null,o)}const m=e(t,[["render",n]]);export{u as __pageData,m as default};
