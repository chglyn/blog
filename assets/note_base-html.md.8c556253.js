import{_ as a,o as s,c as l,Q as e}from"./chunks/framework.419948d5.js";const b=JSON.parse('{"title":"html笔记","description":"远美网是一个vite与vitepress搭建的静态站点，记录着工作中有意义的事情，提供技术支持。","frontmatter":{"title":"html笔记","editLink":true,"head":[["meta",{"name":"description","content":"远美网是一个vite与vitepress搭建的静态站点，记录着工作中有意义的事情，提供技术支持。"}],["meta",{"name":"keywords","content":"块元素,盒子模型,html,html标签,伪类与伪元素,css,css权重"}]]},"headers":[],"relativePath":"note/base-html.md","filePath":"note/base-html.md"}'),t={name:"note/base-html.md"},n=e(`<h3 id="前言" tabindex="-1">前言： <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言：&quot;">​</a></h3><p>前端应用的HTML页面标签进行简单总结，在这里做个简单笔记汇总。</p><hr><p>页面头部的keywords字段: <strong>告诉搜索爬虫引擎，网站是关于什么内容的。</strong></p><h3 id="有序列表与无序列表" tabindex="-1">有序列表与无序列表 <a class="header-anchor" href="#有序列表与无序列表" aria-label="Permalink to &quot;有序列表与无序列表&quot;">​</a></h3><p>有序列表：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&lt;ol&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">	&lt;li&gt;demo&lt;/li&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;/ol&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;ol&gt;</span></span>
<span class="line"><span style="color:#24292e;">	&lt;li&gt;demo&lt;/li&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;/ol&gt;</span></span></code></pre></div><p>可以设置序号从第几开始，添加start字段即可：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&lt;ol start=&quot;10&quot;&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">	&lt;li&gt;demo&lt;/li&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;/ol&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;ol start=&quot;10&quot;&gt;</span></span>
<span class="line"><span style="color:#24292e;">	&lt;li&gt;demo&lt;/li&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;/ol&gt;</span></span></code></pre></div><p>无序列表：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&lt;ul&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">	&lt;li&gt;demo&lt;/li&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;/ul&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;ul&gt;</span></span>
<span class="line"><span style="color:#24292e;">	&lt;li&gt;demo&lt;/li&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;/ul&gt;</span></span></code></pre></div><p>在无序列表中使用 type 属性：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&lt;ul&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">	&lt;li type=&quot;fruits&quot;&gt;app&lt;/li&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;/ul&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;ul&gt;</span></span>
<span class="line"><span style="color:#24292e;">	&lt;li type=&quot;fruits&quot;&gt;app&lt;/li&gt;</span></span>
<span class="line"><span style="color:#24292e;">&lt;/ul&gt;</span></span></code></pre></div><p>在 HTML 4.01 中，不赞成 type 属性；在 XHTML 1.0 Strict DTD 中，不支持 type 属性。请使用 CSS 代替。</p><h3 id="a标签" tabindex="-1">a标签 <a class="header-anchor" href="#a标签" aria-label="Permalink to &quot;a标签&quot;">​</a></h3><ul><li>在页面中当作超链接使用：</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&lt;a href=&quot;/404.html&quot;&gt;...&lt;/a&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;a href=&quot;/404.html&quot;&gt;...&lt;/a&gt;</span></span></code></pre></div><ul><li>在页面中当作锚点使用：</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&lt;a href=&quot;#Id&quot;&gt;...&lt;/a&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;a href=&quot;#Id&quot;&gt;...&lt;/a&gt;</span></span></code></pre></div><ul><li>在页面中调起电话使用：</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&lt;a href=&quot;tel:130XXXXXXXX&quot;&gt;...&lt;/a&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;a href=&quot;tel:130XXXXXXXX&quot;&gt;...&lt;/a&gt;</span></span></code></pre></div><ul><li>在页面中调起邮件使用：</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&lt;a href=&quot;mailto:liu@xxx.com&quot;&gt;...&lt;/a&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;a href=&quot;mailto:liu@xxx.com&quot;&gt;...&lt;/a&gt;</span></span></code></pre></div><ul><li>在页面中协议限定符：</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&lt;a href=&quot;javascript:while(1){alert(1)}&quot;&gt;...&lt;/a&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&lt;a href=&quot;javascript:while(1){alert(1)}&quot;&gt;...&lt;/a&gt;</span></span></code></pre></div><h3 id="主流浏览器内核" tabindex="-1">主流浏览器内核 <a class="header-anchor" href="#主流浏览器内核" aria-label="Permalink to &quot;主流浏览器内核&quot;">​</a></h3><table><thead><tr><th>主流浏览器</th><th>内核</th></tr></thead><tbody><tr><td>Firefox</td><td>Gecko</td></tr><tr><td>Chrome</td><td>Webkit /Blink</td></tr><tr><td>IE</td><td>Trident</td></tr><tr><td>Safari</td><td>Webkit</td></tr><tr><td>Opera</td><td>Presto</td></tr></tbody></table><h3 id="css-cascading-style-sheet" tabindex="-1">CSS(cascading style sheet) <a class="header-anchor" href="#css-cascading-style-sheet" aria-label="Permalink to &quot;CSS(cascading style sheet)&quot;">​</a></h3><p>页面引入CSS方式:</p><ul><li>行间样式</li><li>页面级</li><li>外链</li></ul><p>CSS选择器:</p><ul><li>id</li><li>class</li><li>标签</li></ul><p>CSS权重对比：</p><table><thead><tr><th>选择器</th><th>权重值</th></tr></thead><tbody><tr><td>!important</td><td>Infinity</td></tr><tr><td>行间样式(style=&quot;...&quot;)</td><td>1000</td></tr><tr><td>id</td><td>100</td></tr><tr><td>class/属性/伪类</td><td>10</td></tr><tr><td>标签/伪元素</td><td>1</td></tr><tr><td>通配符</td><td>0</td></tr></tbody></table><p>CSS权重原理：</p><p>比如id权重值是100并不是指id的一个权重值就是100，实际上这个100是一个进制数，不是2进制，也不是10进制；而是256进制， 就是0到255后+1才是1。列如：通配符的权重值0到标签、伪元素的权重值1，中时间实际上差了255。依次类推。</p><p>CSS权重等级：</p><p>!important &gt; 行间样式 &gt; id &gt; class | 属性 &gt; 标签选择器 &gt; 通配符</p><p>CSS选择器组合：</p><ul><li>父子选择器 div span</li><li>直接选择器 div &gt; span</li><li>并列选择器 div.class</li><li>分组选择器 span, div</li></ul><p>CSS取值：</p><ul><li><p>土鳖式（纯英文） color:red;</p></li><li><p>颜色代码 color:#0000ff (16进制)</p></li><li><p>颜色函数 color:rgb(0-255, 0-255, 0-255);</p></li></ul><p>CSS属性可以缩写，比如: border: 1px solid red; 与其相对应的是： border-width + border-style + border-color</p><h3 id="伪类与伪元素" tabindex="-1">伪类与伪元素 <a class="header-anchor" href="#伪类与伪元素" aria-label="Permalink to &quot;伪类与伪元素&quot;">​</a></h3><p>两者可以从外表<strong>长短</strong>进行区分。伪类是一个 <strong>:</strong> ，伪元素是两个 <strong>::</strong> 。</p><h3 id="行内元素" tabindex="-1">行内元素 <a class="header-anchor" href="#行内元素" aria-label="Permalink to &quot;行内元素&quot;">​</a></h3><p>行内元素简称内联元素，该元素带有 inline 属性， 不可以改变宽高。</p><p>比如：span、strong、em、a、del、... 。</p><h3 id="块级元素" tabindex="-1">块级元素 <a class="header-anchor" href="#块级元素" aria-label="Permalink to &quot;块级元素&quot;">​</a></h3><p>该元素带有 block 属性， 独占一行， 可以通过css改变宽高。</p><p>比如：div、p、ul、ol、li、form、address、...。</p><h3 id="行级块元素" tabindex="-1">行级块元素 <a class="header-anchor" href="#行级块元素" aria-label="Permalink to &quot;行级块元素&quot;">​</a></h3><p>该元素带有 inline-block 属性，行内元素和块级元素可以转化为行级块元素。</p><p>比如：img</p><p>注意：凡是带有inline的元素，都有文字特性留白间距；文本分隔符，元素与元素直接有空白间隔。</p><h3 id="盒子模型" tabindex="-1">盒子模型 <a class="header-anchor" href="#盒子模型" aria-label="Permalink to &quot;盒子模型&quot;">​</a></h3><ul><li>盒子壁: border</li><li>内边距: padding</li><li>盒内容: width + height</li></ul><p>盒子模型包括：margin + border + padding + content(width + height)</p><p>盒子可视区域 border + padding + width/height</p><p>CSS3盒子模型提出box-sizing属性，它的值有：content-box/border-box</p><p>首先看下content-box下盒子模型：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">.parent{</span></span>
<span class="line"><span style="color:#e1e4e8;">	width:200px;</span></span>
<span class="line"><span style="color:#e1e4e8;">	height:200px;</span></span>
<span class="line"><span style="color:#e1e4e8;">	margin: 20px;</span></span>
<span class="line"><span style="color:#e1e4e8;">	border:2px solid red;</span></span>
<span class="line"><span style="color:#e1e4e8;">	background-color:#ccc;</span></span>
<span class="line"><span style="color:#e1e4e8;">	box-sizing: content-box; /*这个盒子模型*/</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">.parent{</span></span>
<span class="line"><span style="color:#24292e;">	width:200px;</span></span>
<span class="line"><span style="color:#24292e;">	height:200px;</span></span>
<span class="line"><span style="color:#24292e;">	margin: 20px;</span></span>
<span class="line"><span style="color:#24292e;">	border:2px solid red;</span></span>
<span class="line"><span style="color:#24292e;">	background-color:#ccc;</span></span>
<span class="line"><span style="color:#24292e;">	box-sizing: content-box; /*这个盒子模型*/</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><p>从图中可以看出，该盒子模型宽度为204px，也就是说在该属性下盒子<strong>向外扩展</strong>，盒子会变大。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">.parent{</span></span>
<span class="line"><span style="color:#e1e4e8;">	width:200px;</span></span>
<span class="line"><span style="color:#e1e4e8;">	height:200px;</span></span>
<span class="line"><span style="color:#e1e4e8;">	border:2px solid red;</span></span>
<span class="line"><span style="color:#e1e4e8;">	background-color:#ccc;</span></span>
<span class="line"><span style="color:#e1e4e8;">	box-sizing: border-box; // 这个盒子模型</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">.parent{</span></span>
<span class="line"><span style="color:#24292e;">	width:200px;</span></span>
<span class="line"><span style="color:#24292e;">	height:200px;</span></span>
<span class="line"><span style="color:#24292e;">	border:2px solid red;</span></span>
<span class="line"><span style="color:#24292e;">	background-color:#ccc;</span></span>
<span class="line"><span style="color:#24292e;">	box-sizing: border-box; // 这个盒子模型</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><p>从图中可以看出，该盒子模型宽度为200px，也就是说在该属性下盒子<strong>向内扩展</strong>，盒子会不变大。</p><h3 id="定位技术" tabindex="-1">定位技术 <a class="header-anchor" href="#定位技术" aria-label="Permalink to &quot;定位技术&quot;">​</a></h3><ul><li><p>position常用的值: relative | absolute | fixed | static</p></li><li><p>relative 相对定位 保留原来位置进行定位 相对于自己原来的位置进行定位</p></li><li><p>absolute 绝对定位 脱离原来位置进行定位 相对于最近有定位的父级进行定位；如果没有，相对于文档进行定位</p></li></ul><p>常识 body有个默认的8像素 margin值</p><h3 id="margin塌陷问题" tabindex="-1">margin塌陷问题 <a class="header-anchor" href="#margin塌陷问题" aria-label="Permalink to &quot;margin塌陷问题&quot;">​</a></h3><p>如何触发一个盒子BFC：</p><ul><li><p>设置绝对定位，position:absoulte</p></li><li><p>设置行内块元素， display:inline-block</p></li><li><p>设置元素浮动，float:left/right</p></li><li><p>添加overflow:hidden</p></li></ul><p>注意：垂直方向上父子上的margin，取最大的那个值。</p><p>解决margin塌陷添：</p><ul><li><p>margin塌陷添加css</p></li><li><p>margin合并添加html</p></li></ul><h3 id="float模型" tabindex="-1">float模型 <a class="header-anchor" href="#float模型" aria-label="Permalink to &quot;float模型&quot;">​</a></h3><p>float常用取值：left/right。</p><p>1、浮动元素产生了浮动流（只有块级元素会产生），所有产生了浮动流的元素，块级元素看不到他们。</p><p>2、产生了BFC的元素和文本类属性的元素以及文本都能看到浮动元素（带有inline属性的都属于文本类属性）。</p><p>如何清理浮动：</p><ul><li><p>清除周边浮动在父级元素添加一个标签，设置使用clear:both 不推荐。</p></li><li><p>添加伪元素(inline属性) ::before{content:&#39;&#39;;clear:both;display:block;}，content只能适用于伪元素，添加clear清除必须是块级元素所以添加block属性。</p></li></ul><h3 id="文字溢出" tabindex="-1">文字溢出 <a class="header-anchor" href="#文字溢出" aria-label="Permalink to &quot;文字溢出&quot;">​</a></h3><p>单行文本三件套： white-space:nowrap overflow:hidden text-overflow:ellipsis。</p><p>多行文本 只做截断。</p><h3 id="图片处理" tabindex="-1">图片处理 <a class="header-anchor" href="#图片处理" aria-label="Permalink to &quot;图片处理&quot;">​</a></h3><p>1、text-indent:设置超过盒子宽; overflow:hidden; white-space:nowrap</p><p>2、height:0;设置padding-top:设置一个高度;overflow:hidden;</p><h3 id="元素嵌套规则" tabindex="-1">元素嵌套规则 <a class="header-anchor" href="#元素嵌套规则" aria-label="Permalink to &quot;元素嵌套规则&quot;">​</a></h3><ul><li>行级元素只能嵌套行级元素</li><li>块级元素可以嵌套任何元素</li><li>p标签特殊、a标签不能嵌套a标签</li></ul><h3 id="常识" tabindex="-1">常识 <a class="header-anchor" href="#常识" aria-label="Permalink to &quot;常识&quot;">​</a></h3><ul><li>1em = 16px。</li><li>body有8px的margin值。</li><li>凡是设置position:absoulte;float:left/right 打内部把元素转化成inline-block。</li><li>图片环绕文字 图片设置float:left。</li><li>行内元素设置行块级属性里面文字和外面文字上对齐，使用vertical-align。</li><li>行内元素里面文字和外面文字底对齐。</li></ul>`,90),p=[n];function o(i,r,c,d,h,g){return s(),l("div",null,p)}const y=a(t,[["render",o]]);export{b as __pageData,y as default};
